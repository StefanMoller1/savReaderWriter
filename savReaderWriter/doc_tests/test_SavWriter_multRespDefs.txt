##############################################################################
## Write multiple response definitions
##############################################################################

>>> import os
>>> import tempfile
>>> import sys
>>> sys.stdout.write('<skipline> '); from savReaderWriter import * # doctest: +ELLIPSIS
<skipline> ...

# preparare some data
>>> records = [['Test1', 1, 1, 'Yes', 'No'], ['Test2', 2, 1, 'No', 'Yes']]
>>> varNames = ['v1', 'v2', 'v3', 'yn', 'yeah']
>>> varTypes = {'v1': 5, 'v2': 0, 'v3': 0, 'yn': 3, 'yeah': 3}
>>> savFileName = os.path.join(tempfile.gettempdir(), 'test.sav')
>>> def checkMultRespDefs(savFileName):
...     with SavHeaderReader(savFileName) as spssDict:
...         wholeDict = spssDict.dataDictionary()
...         return wholeDict['multRespDefs']

###########
# Categorical sets
###########
# Was already ok
>>> categorical = {'setType': 'C', 'label': 'labelC',  'varNames': ['v2', 'v3']}
>>> multRespDefs = dict(categorical=categorical)
>>> kwargs = dict(savFileName=savFileName, varNames=varNames,
...               varTypes=varTypes, multRespDefs=multRespDefs)
>>> with SavWriter(**kwargs) as writer:
...     writer.writerows(records)
>>> desired = {'categorical': {'label': 'labelC', 'setType': 'C', 'varNames': ['v2', 'v3']}}
>>> checkMultRespDefs(savFileName) == desired
True


###########
# Dichotomous sets
###########
# 2013-06-13 FIXED
# previously "Assertion `length != 0' failed. Aborted (core dumped)"
>>> dichotomous1 = {'setType': 'D', 'label': 'labelD',
...                 'varNames': ['yn', 'yeah'], 'countedValue': 'Yes'}
>>> multRespDefs = dict(dichotomous1=dichotomous1)
>>> kwargs = dict(savFileName=savFileName, varNames=varNames,
...               varTypes=varTypes, multRespDefs=multRespDefs)
>>> with SavWriter(**kwargs) as writer:
...     writer.writerows(records)
>>> desired = {'dichotomous1': {'countedValue': 'Yes',
...            'label': 'labelD',
...            'setType': 'D',
...            'varNames': ['yn', 'yeah']}}
>>> checkMultRespDefs(savFileName) == desired
True


>>> dichotomous2 = {"setType": "D", "label": "", "varNames":
...                 ["v1", "v2", "v3"], "countedValue": "No"}
>>> multRespDefs = dict(dichotomous2=dichotomous2)
>>> kwargs = dict(savFileName=savFileName, varNames=varNames,
...               varTypes=varTypes, multRespDefs=multRespDefs)
>>> with SavWriter(**kwargs) as writer:
...     writer.writerows(records)
>>> desired = {'dichotomous2': {'countedValue': 'No',
...            'label': '',
...            'setType': 'D',
...            'varNames': ['v1', 'v2', 'v3']}}
>>> checkMultRespDefs(savFileName) == desired
True


### unicode mode (ioUtf8=True)
>>> uthai = u'\u0e2a\u0e27\u0e31\u0e2a\u0e14\u0e35'
>>> dichotomous3 = {"setType": "D", "label": uthai,
...                 "varNames": ["v1", "v2"], "countedValue": uthai}
>>> multRespDefs = dict(dichotomous3=dichotomous3)
>>> kwargs = dict(savFileName=savFileName,
...               varNames=varNames,
...               varTypes=varTypes,
...               multRespDefs=multRespDefs,
...               ioUtf8=True)
>>> with SavWriter(**kwargs) as writer:
...     writer.writerows(records)
>>> thai = ('\xe0\xb8\xaa\xe0\xb8\xa7\xe0\xb8\xb1' + 
...         '\xe0\xb8\xaa\xe0\xb8\x94\xe0\xb8\xb5')
>>> desired = {'dichotomous3': {'countedValue': thai,
...            'label': thai,
...            'setType': 'D',
...            'varNames': ['v1', 'v2']}}
>>> checkMultRespDefs(savFileName) == desired
True
>>> uthai == thai.decode("utf-8")
True

# clean up
>>> os.remove(savFileName)
