import cProfile
import pstats
import sys
sys.path.append("./spssio/lin32")

from SavReaderWriter import *

##savFileName = "another_test.sav"
##records = [['Test1', 1, 1, '2010-08-11'], ['Test2', 2, 1, '1910-01-12']]
##varNames = ['var1', 'var2', 'var3', 'bdate']
##varTypes = {'var1': 50, 'var2': 0, 'var3': 0, 'bdate': 10}
##with SavWriter(savFileName, varNames, varTypes) as sav:
##    for record in records:
##        sav.writerow(record)
##    print "Done! %s" % sav.savFileName

def stressTest(nrows=10**6, ncols=10**2, mode="r",
              savFileName="stress_test.sav"):
    MAX_NROWS = MAX_NCOLS = 2**31 - 1
    assert nrows and ncols <= MAX_NCOLS
    w_varNames = ['v%03d' % i for i in xrange(ncols)]
    w_varTypes = dict([(v, i % 2) for i, v in enumerate(w_varNames)])
    ifelse = "'x' if v else 0"
    record = [eval(ifelse) for k, v in sorted(w_varTypes.items())]
    if mode == "w":
        print "start writing:", time.asctime()
        with SavWriter(savFileName, w_varNames, w_varTypes) as w:
            for i in range(nrows):
                w.writerow(record)
        print "end writing:", time.asctime(), "\n" + 70 * "*"
    elif mode == "r":
        print "start reading:", time.asctime()
        with SavReader(savFileName) as r:
            for lino, line in enumerate(r):
                pass
        print "end reading:", time.asctime(), "\n" + 70 * "*"

cProfile.run('stressTest(mode="w")', 'prof_w')
p = pstats.Stats('prof_w')
p.sort_stats('time').print_stats(50)
##    cProfile.run('stressTest(mode="r")', 'prof_r')
##    p = pstats.Stats('prof_r')
##    p.sort_stats('time').print_stats(50)
